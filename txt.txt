npx tailwindcss -i ./src/input.css -o ./src/index.css --watch

# logic for post like system
post should have one state, liked or unliked, it should receive the value prop


when ever someone clicks on the like button it should be toggled

when calling rendering post componenet, the prop for liked should be send as either true or false which is fetched form the database 

now in the users collection, in each user's document, besides the userPosts array, we create likedPosts array.
the array contains postId of each post that the user has liked.


// this might work just to render the liked post as liked on the feed but this wont work if we want to desplay peoples who liked it (solution: add liked by to the post collection as well)

when looping through the posts collection to render Post componenet, 
[
    first fetch the liked post array=> likedPosts

      {posts.map((post, index) => (


            likedPosts.map((likedId)=>{
                    // find if there is a way to look for one specific item from the array, like filter or something
                    if(likedId == post.id){
                        setLiked(true);
                        end the loop;
                    }
                    ele{
                        setLiked(flase);
                    }

            })
        
              <Posts
                key={post.id || `post-${index}`}
                posts={posts}
                post={post}
                index={index}
                userId={props.userId}
                deletePost={props.deletePost}
              />
            ))}


]




now the logic for the database goes like 
{

    function handelLikeButton(postId) {
        
        if (!liked){
            liked = true
            acces user collection and add the postId of the liked post into the likedPosts array
            access the specific post from the posts collection, and add likedBy and add the userName to it
            
        }
        else {
            liked = false
            acces user collection and remove that specific postId from the array
            accecc the posts collection and remove the userId
        }

    }
}


code:

async function handelLiked(){

    props.setLiked(prev => !prev)

    if (liked){
        
    }
}
-b


useEffect(()=>{


const userDocRef = doc(db,"users",userId);
const userDocSnap = await getDoc(userDocRef);

if(userDocSnap.exists()){
const userData = userDocSnap.data();
props.setLikedPosts(userData.likedPosts || []);

}
},[auth]);
